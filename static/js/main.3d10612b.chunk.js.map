{"version":3,"sources":["images/abstract.jpg","images/close.svg","components/home/Home.jsx","components/form/Form.jsx","components/form/InputContainer.jsx","components/login/LoginView.jsx","api/StreamPollsAPI.js","components/error/errorController.js","components/login/Login.jsx","components/error/Page404.jsx","components/signup/SignUpView.jsx","components/signup/SignUp.jsx","components/logout/LogoutView.jsx","components/logout/Logout.jsx","components/creatorPolls/CreatorPollsView.jsx","components/creatorPolls/CreatorPolls.jsx","components/mypolls/Poll.jsx","components/userPolls/UserPollsView.jsx","components/userPolls/UserPolls.jsx","components/polls/Polls.jsx","components/mypolls/MyPollsView.jsx","components/mypolls/MyPolls.jsx","components/auth/Auth.jsx","components/routes/ProtectedRoutes.jsx","components/routes/CustomRoutes.jsx","components/routes/Routes.jsx","components/app/App.jsx","index.js"],"names":["module","exports","Home","className","style","background","bg","backgroundSize","backgroundPosition","backgroundRepeat","to","Form","heading","children","InputContainer","name","type","value","id","errors","onInputChange","link","href","onChange","color","LoginView","fields","onSubmit","footerText","footerLinkText","footerLinkAddress","email","password","onClick","axios","create","baseURL","errorController","error","alert","data","message","Login","history","useHistory","useState","setfields","setErrors","formValid","setformValid","event","a","preventDefault","StreamPollsAPI","post","res","localStorage","setItem","token","push","response","target","newFields","formIsValid","handleValidation","Page404","SignUpView","passwordConfirm","props","initialFields","RegExp","test","match","params","pathname","role","render","LogoutView","handleLogout","Logout","window","confirm","removeItem","CreatorPollsView","handleAddField","renderFields","uniqueID","question","CreatorPolls","user","answers","includes","fieldName","split","fieldIndex","config","headers","Authorization","getItem","poll","map","el","index","key","Poll","handleDelete","_id","src","crossIcon","alt","totalVotes","answer","votes","answersCount","toFixed","toString","UserPollsView","polls","code","isButtonClicked","onVote","i","submittedPolls","j","UserPolls","selectedAnswer","setpolls","setisButtonClicked","seterrors","isCodeValid","setisCodeValid","isVoteSelected","setisVoteSelected","get","pollID","closest","patch","location","reload","codeValid","voteSelected","newErrors","Polls","MyPollsView","handleRefresh","length","MyPolls","delete","useEffect","fetchPolls","useAuth","isSignedIn","setisSignedin","setUser","checkAuth","ProtectedRoutes","Component","component","CustomRoutes","Routes","path","exact","SignUp","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d10612b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abstract.41f88693.jpg\";","module.exports = __webpack_public_path__ + \"static/media/close.e3380abb.svg\";","// Third Party Imports\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Project Imports\nimport bg from '../../images/abstract.jpg';\nimport './home.css';\n\nfunction Home() {\n  return (\n    <div\n      className=\"home-page\"\n      style={{\n        background: `url(\"${bg}\")`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n      }}\n    >\n      <Link to=\"/signup/creator\" className=\"btn btn-creator\">\n        Are you a creator\n      </Link>\n      <Link to=\"/signup/user\" className=\"btn btn-user\">\n        Are you a user\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","// Third Party imports\nimport React from 'react';\n\n// Styles\nimport './form.css';\n\nfunction Form({ heading, children }) {\n  return (\n    <div className=\"form-container\">\n      <form className=\"sign-in-form\">\n        <h1>{heading}</h1>\n\n        {children}\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","// Third Party imports\nimport React from 'react';\n\n// Styles\nimport './inputContainer.css';\n\nfunction InputContainer({\n  name,\n  type,\n  value,\n  id,\n  errors,\n  onInputChange,\n  link,\n}) {\n  return (\n    <div className=\"input-container\">\n      <div className=\"label-text\">\n        <span className=\"text\">{name}</span>\n        <a href=\"#1\" className=\"text-2 bb-1\">\n          {link}\n        </a>\n      </div>\n      <div className=\"input-wrapper\">\n        <input id={id} type={type} value={value} onChange={onInputChange} />\n        <span style={{ color: 'red' }}>{errors}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default InputContainer;\n","// Third Party Imports\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Project Imports\nimport Form from '../form/Form';\nimport InputContainer from '../form/InputContainer';\n\n// Styles\nimport './LoginView.css';\nimport bg from '../../images/abstract.jpg';\n\nfunction LoginView({ onInputChange, fields, errors, onSubmit }) {\n  const heading = 'Login';\n  const footerText = 'Not a member?';\n  const footerLinkText = 'Sign up now';\n  const footerLinkAddress = '/';\n\n  return (\n    <div\n      className=\"login-page\"\n      style={{\n        background: `url(\"${bg}\")`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n      }}\n    >\n      <Form\n        heading={heading}\n        footerText={footerText}\n        footerLinkText={footerLinkText}\n        footerLinkAddress={footerLinkAddress}\n        onSubmit={onSubmit}\n      >\n        <InputContainer\n          name=\"Email\"\n          id=\"email\"\n          type=\"text\"\n          value={fields.email}\n          errors={errors.email}\n          onInputChange={onInputChange}\n        />\n        <InputContainer\n          name=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          link=\"Forgot?\"\n          value={fields.password}\n          errors={errors.password}\n          onInputChange={onInputChange}\n        />\n\n        <div className=\"form-btn\">\n          <button onClick={onSubmit} className=\"btn action-btn\">\n            Sign in\n          </button>\n        </div>\n\n        <div className=\"footer\">\n          <span className=\"text-2\">{footerText}</span>\n          <Link className=\"text-2 bb-1\" to={footerLinkAddress}>\n            {footerLinkText}\n          </Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\nexport default LoginView;\n","// Third Party Imports\nimport axios from 'axios';\n\n// Axios Configuration for stream polls API\nconst axiosConfig = {\n  baseURL: 'https://stream-polls.herokuapp.com/api/v1',\n};\n\nexport default axios.create(axiosConfig);\n","const errorController = (error) => {\n  alert(error.data.message);\n};\n\nexport default errorController;\n","// Third Party Imports\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Project Imports\nimport LoginView from './LoginView';\nimport StreamPollsAPI from '../../api/StreamPollsAPI';\nimport errorController from '../error/errorController';\n\nfunction Login() {\n  const history = useHistory();\n\n  // Fields state\n  const initialFields = { email: '', password: '' };\n  const [fields, setfields] = useState(initialFields);\n\n  // Errors State\n  const initialErrors = {};\n  const [errors, setErrors] = useState(initialErrors);\n\n  // Form valid state\n  const initialFormValid = false;\n  const [formValid, setformValid] = useState(initialFormValid);\n\n  // Validation handling\n  function handleValidation(fields) {\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields['email']) {\n      formIsValid = false;\n      errors['email'] = 'Please provide Email';\n    }\n\n    if (!fields['password']) {\n      formIsValid = false;\n      errors['password'] = 'Please provide password';\n    }\n\n    setErrors(errors);\n    setformValid(formIsValid);\n  }\n\n  // Input handle\n  const onInputChange = (event) => {\n    // Get input id as name, and value\n    const { id: name, value } = event.target;\n\n    // Create fields object with new value\n    let newFields = { ...fields, [name]: value };\n\n    // Set state to new value\n    setfields(newFields);\n\n    // Handle validation using new value\n    handleValidation(newFields);\n  };\n\n  // Form submission\n  const onSubmit = async (event) => {\n    // Prevent default event (Refresh)\n    event.preventDefault();\n\n    // Form not valid return alert\n    if (!formValid) {\n      return alert('Form is not valid');\n    }\n\n    try {\n      // Send data to API\n      const res = await StreamPollsAPI.post('/users/login', fields);\n\n      // Set token in local storage\n      localStorage.setItem('token', res.data.token);\n\n      // Navigate to polls page\n      history.push('/polls');\n    } catch (err) {\n      if (err.response) {\n        errorController(err.response);\n      }\n    }\n  };\n\n  return (\n    <LoginView\n      fields={fields}\n      onInputChange={onInputChange}\n      onSubmit={onSubmit}\n      errors={errors}\n    />\n  );\n}\n\nexport default Login;\n","// Third Party Imports\nimport React from 'react';\n\n// Styles\nimport './page404.css';\n\nfunction Page404() {\n  return (\n    <div className=\"page-404\">\n      <h1>Page not found.</h1>\n      <h2>Please check the URL</h2>\n    </div>\n  );\n}\nexport default Page404;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Form from '../form/Form';\nimport InputContainer from '../form/InputContainer';\n\nimport './signUpView.css';\nimport bg from '../../images/abstract.jpg';\n\nfunction SignUpView({ onInputChange, fields, errors, onSubmit }) {\n  const heading = 'Signup';\n  const footerText = 'Already a member?';\n  const footerLinkText = 'Sign in';\n  const footerLinkAddress = '/login';\n\n  return (\n    <div\n      className=\"signup-page\"\n      style={{\n        background: `url(\"${bg}\")`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n      }}\n    >\n      <Form\n        heading={heading}\n        footerText={footerText}\n        footerLinkText={footerLinkText}\n        footerLinkAddress={footerLinkAddress}\n        onSubmit={onSubmit}\n      >\n        <InputContainer\n          name=\"Email\"\n          id=\"email\"\n          type=\"text\"\n          value={fields.email}\n          errors={errors.email}\n          onInputChange={onInputChange}\n        />\n        <InputContainer\n          name=\"Password\"\n          id=\"password\"\n          type=\"password\"\n          value={fields.password}\n          errors={errors.password}\n          onInputChange={onInputChange}\n        />\n\n        <InputContainer\n          name=\"Password Confirm\"\n          id=\"passwordConfirm\"\n          type=\"password\"\n          value={fields.passwordConfirm}\n          errors={errors.passwordConfirm}\n          onInputChange={onInputChange}\n        />\n\n        <div className=\"form-btn\">\n          <button onClick={onSubmit} className=\"btn action-btn\">\n            Sign up\n          </button>\n        </div>\n\n        <div className=\"footer\">\n          <span className=\"text-2\">{footerText}</span>\n          <Link className=\"text-2 bb-1\" to={footerLinkAddress}>\n            {footerLinkText}\n          </Link>\n        </div>\n      </Form>\n    </div>\n  );\n}\nexport default SignUpView;\n","// Third Party Imports\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n// Project Imports\nimport SignUpView from './SignUpView';\nimport StreamPollsAPI from '../../api/StreamPollsAPI';\nimport errorController from '../error/errorController';\n\nfunction Login(props) {\n  // Fields state\n  const initialFields = { email: '', password: '', passwordConfirm: '' };\n  const [fields, setfields] = useState(initialFields);\n\n  // Errors State\n  const initialErrors = {};\n  const [errors, setErrors] = useState(initialErrors);\n\n  // Form valid state\n  const initialFormValid = false;\n  const [formValid, setformValid] = useState(initialFormValid);\n\n  // Validation handling\n  function handleValidation(fields) {\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields['email']) {\n      formIsValid = false;\n      errors['email'] = 'Please provide Email';\n    }\n\n    if (!fields['password']) {\n      formIsValid = false;\n      errors['password'] = 'Please provide password';\n    }\n\n    if (fields['password'] !== fields['passwordConfirm']) {\n      formIsValid = false;\n      errors['passwordConfirm'] = 'Password and Password confirm should match';\n    }\n\n    const r = new RegExp(\n      '^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$'\n    );\n\n    if (!r.test(fields['password'])) {\n      formIsValid = false;\n      errors['password'] =\n        '8 to 15 characters,1 lowercase letter,  uppercase letter,  numeric digit, , special character';\n    }\n\n    setErrors(errors);\n    setformValid(formIsValid);\n  }\n\n  // Input handle\n  const onInputChange = (event) => {\n    // Get input id as name, and value\n    const { id: name, value } = event.target;\n\n    // Create fields object with new value\n    let newFields = { ...fields, [name]: value };\n\n    // Set state to new value\n    setfields(newFields);\n\n    // Handle validation using new value\n    handleValidation(newFields);\n  };\n\n  // Form submission\n  const onSubmit = async (event) => {\n    // Prevent default event (Refresh)\n    event.preventDefault();\n\n    // Form not valid return alert\n    if (!formValid) {\n      return alert('Form is not valid');\n    }\n\n    try {\n      // Send data to API\n      await StreamPollsAPI.post(`/users/signup`, fields);\n\n      setfields(initialFields);\n\n      alert('Successfully signed up. Login to continue');\n    } catch (err) {\n      errorController(err.response);\n    }\n  };\n\n  function render() {\n    // Get id param from URL\n    const id = props.match.params.id;\n\n    // If not creator or user Redirect to 404\n    if (id !== 'creator' && id !== 'user') {\n      return <Redirect to={{ pathname: '/page404' }} />;\n    }\n\n    // setfields({ ...fields, role: id });\n    // Assign role according to id\n    fields.role = id;\n\n    // Return Component\n    return (\n      <SignUpView\n        fields={fields}\n        onInputChange={onInputChange}\n        onSubmit={onSubmit}\n        errors={errors}\n      />\n    );\n  }\n\n  return render();\n}\n\nexport default Login;\n","import React from 'react';\n\nimport './logoutView.css';\n\nexport default function LogoutView({ handleLogout }) {\n  return (\n    <button onClick={handleLogout} className=\"btn logout-btn\">\n      Logout\n    </button>\n  );\n}\n","import React from 'react';\n\nimport LogoutView from './LogoutView';\n\nexport default function Logout() {\n  function handleLogout() {\n    if (window.confirm('Are you sure want to logout')) {\n      localStorage.removeItem('token');\n    }\n  }\n\n  return <LogoutView handleLogout={handleLogout} />;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logout from '../logout/Logout';\n\nimport './creatorPollsView.css';\n\nexport default function CreatorPollsView({\n  fields,\n  handleAddField,\n  renderFields,\n  onInputChange,\n  onSubmit,\n  uniqueID,\n}) {\n  return (\n    <div className=\"creator-polls-page\">\n      <div className=\"polls-container\">\n        <div className=\"polls-content\">\n          <form>\n            <div className=\"create-form-wrapper\">\n              <h1>Create Poll</h1>{' '}\n              <div className=\"logout-btn-wrapper\">\n                <span className=\"unique-id\">Your Unique ID: {uniqueID}</span>\n                <Logout />\n              </div>\n            </div>\n\n            <div className=\"block\">\n              <label className=\"label\">Question</label>\n              <div className=\"field\">\n                <input\n                  id=\"question\"\n                  type=\"text\"\n                  value={fields.question}\n                  onChange={onInputChange}\n                />\n              </div>\n\n              <label className=\"label\">Answer Options</label>\n              {renderFields(fields)}\n            </div>\n            <div className=\"poll-btns\">\n              <div className=\"poll-btns-left\">\n                <button onClick={onSubmit} className=\"btn poll-btn\">\n                  Create Poll\n                </button>\n                <button onClick={handleAddField} className=\"btn field-btn\">\n                  Add Field\n                </button>\n              </div>\n\n              <div className=\"poll-btns-right\">\n                <Link to=\"/mypolls\">\n                  <button className=\"btn results-btn\">Show Results</button>\n                </Link>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Third Party imports\nimport React, { useState } from 'react';\n\nimport CreatorPollsView from './CreatorPollsView';\nimport StreamPollsAPI from '../../api/StreamPollsAPI';\nimport errorController from '../error/errorController';\n\nfunction CreatorPolls({ user }) {\n  // Fields state\n  const initialFields = {\n    question: 'Enter your question here..',\n    answers: ['Choose an answer...'],\n  };\n  const [fields, setfields] = useState(initialFields);\n\n  // Input handle\n  function onInputChange(event) {\n    // Get input id as name, and value\n    const { value, id: name } = event.target;\n\n    // Create fields object with new value\n    let newFields = { ...fields };\n\n    // For Question Field\n    if (name === 'question') {\n      newFields[name] = value;\n    }\n\n    // For Answer field\n    if (name.includes('answer')) {\n      /**\n       * Example:\n       *         name = answer-0\n       *     fieldName = answer\n       *    fieldIndex = 0\n       *    newFields.answers[0] = value\n       */\n\n      const fieldName = name.split('-')[0];\n      const fieldIndex = name.split('-')[1];\n\n      newFields[fieldName][fieldIndex] = value;\n    }\n\n    // Set state to new value\n    setfields(newFields);\n  }\n\n  // Dynamically render fields\n  function renderFields(fields) {\n    return fields.answers.map((el, index) => (\n      <div key={index} className=\"field\">\n        <input\n          id={`answers-${index}`}\n          type=\"text\"\n          onChange={onInputChange}\n          value={el}\n        />\n      </div>\n    ));\n  }\n\n  function handleAddField(event) {\n    // Prevent default event (refresh)\n    event.preventDefault();\n\n    // Copy to new fields\n    const newFields = { ...fields };\n\n    // Add another answwer field\n    newFields.answers.push('Choose an answer');\n\n    // Set new Fields\n    setfields(newFields);\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    // Axios config\n    // Adding Bearer token to authorization header\n    const config = {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    };\n\n    try {\n      // Creating poll\n      const poll = {\n        poll: {\n          question: fields.question,\n          answers: fields.answers,\n        },\n      };\n\n      // Sending poll to API\n      await StreamPollsAPI.post('/users/polls', poll, config);\n\n      alert('Poll successfully created');\n    } catch (err) {\n      if (err.response) {\n        errorController(err.response);\n      }\n    }\n  }\n\n  return (\n    <CreatorPollsView\n      fields={fields}\n      handleAddField={handleAddField}\n      renderFields={renderFields}\n      onInputChange={onInputChange}\n      onSubmit={onSubmit}\n      uniqueID={user.uniqueID}\n    />\n  );\n}\n\nexport default CreatorPolls;\n","import React from 'react';\n\nimport './poll.css';\nimport crossIcon from '../../images/close.svg';\n\nfunction Poll({ poll, handleDelete }) {\n  function calcPercentage(votes, totalVotes) {\n    if (totalVotes === 0) {\n      return '0%';\n    }\n    const percentage = (votes * 100) / totalVotes;\n\n    return percentage.toFixed(2).toString() + '%';\n  }\n\n  function renderAnswers() {\n    return poll.answers.map((answer, index) => (\n      <div key={index} className=\"ans-block\">\n        <div className=\"ans-block-left\">{answer}</div>\n        <div className=\"ans-block-right\">\n          <div className=\"ans-percentage\">\n            {calcPercentage(poll.answersCount[index], poll.totalVotes)}\n          </div>\n          <div className=\"ans-votes\">({poll.answersCount[index]} Votes)</div>\n        </div>\n      </div>\n    ));\n  }\n\n  return (\n    <div className=\"poll\" id={poll._id}>\n      <header className=\"header\">\n        <h2 className=\"question\">{poll.question}</h2>\n\n        <button onClick={handleDelete} className=\"delete-btn\">\n          <img className=\"cross-icon\" src={crossIcon} alt=\"delete-icon\" />\n        </button>\n      </header>\n\n      <div className=\"my-poll-info\">\n        The result after {poll.totalVotes} people voted:\n      </div>\n\n      <div className=\"results\">\n        {renderAnswers()}\n        <div className=\"total-votes\">\n          Total Votes: <span>{poll.totalVotes}</span>{' '}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Poll;\n","import React from 'react';\n\nimport Poll from '../mypolls/Poll';\nimport Logout from '../logout/Logout';\n\nimport './userPollsView.css';\n\nfunction UserPollsView({\n  polls,\n  onInputChange,\n  onSubmit,\n  code,\n  isButtonClicked,\n  onVote,\n  user,\n  errors,\n}) {\n  function renderHelper() {\n    if (isButtonClicked) {\n      return polls.map((poll, i) => {\n        if (!user.submittedPolls.includes(poll._id)) {\n          return (\n            <form id={poll._id} key={poll._id} className=\"poll\">\n              <div className=\"headers\">\n                <h2>{polls[i].question}</h2>\n              </div>\n\n              {polls[i].answers.map((answer, j) => (\n                <div key={j} className=\"input-box\">\n                  <input\n                    name=\"poll-radio\"\n                    onChange={onInputChange}\n                    type=\"radio\"\n                    id={`poll-answer-${j}`}\n                    value={j}\n                  />\n                  <label className=\"checkbox-label\">{answer}</label>\n                </div>\n              ))}\n\n              <div className=\"submit-vote\">\n                <button onClick={onVote} className=\"btn vote-btn\">\n                  Vote\n                </button>\n              </div>\n            </form>\n          );\n        } else {\n          return <Poll key={poll._id} poll={poll} />;\n        }\n      });\n    } else if (!isButtonClicked) {\n      return (\n        <form className=\"code-form\">\n          <div className=\"logout-btn-user\">\n            <Logout />\n          </div>\n          <label className=\"label mb-15\">Enter Creator's unique Code</label>\n          <div className=\"code-input-wrapper\">\n            <input\n              className=\"code-input mb-15\"\n              type=\"text\"\n              name=\"code\"\n              id=\"code\"\n              onChange={onInputChange}\n              value={code}\n            />\n            <span className=\"error\">{errors.code}</span>\n          </div>\n          <button onClick={onSubmit} className=\"btn submit-code-btn mb-15\">\n            Submit Code\n          </button>\n        </form>\n      );\n    }\n  }\n\n  return (\n    <div className=\"user-polls-page\">\n      <div className=\"user-polls-container\">{renderHelper()}</div>\n    </div>\n  );\n}\n\nexport default UserPollsView;\n","// Third Party imports\nimport React, { useState } from 'react';\n\nimport UserPollsView from './UserPollsView';\nimport StreamPollsAPI from '../../api/StreamPollsAPI';\nimport errorController from '../error/errorController';\n\nfunction UserPolls({ user }) {\n  const initialFields = { code: '', selectedAnswer: null };\n  const [fields, setfields] = useState(initialFields);\n\n  const initialPolls = [];\n  const [polls, setpolls] = useState(initialPolls);\n\n  const [isButtonClicked, setisButtonClicked] = useState(false);\n\n  const [errors, seterrors] = useState({});\n\n  const [isCodeValid, setisCodeValid] = useState(false);\n  const [isVoteSelected, setisVoteSelected] = useState(false);\n\n  function handleValidation(newFields) {\n    let codeValid = true;\n    let voteSelected = true;\n\n    let newErrors = { ...errors };\n\n    // Checking code exists\n    if (newFields.code === '') {\n      newErrors['code'] = 'Required';\n      codeValid = false;\n    }\n\n    if (!newFields.selectedAnswer) {\n      newErrors['selectedAnswer'] = 'Required';\n      voteSelected = false;\n    }\n\n    seterrors(newErrors);\n    setisCodeValid(codeValid);\n    setisVoteSelected(voteSelected);\n  }\n\n  function onInputChange(event) {\n    const { id: name, value } = event.target;\n\n    let newFields = { ...fields };\n\n    // Handling code\n    if (name === 'code') {\n      newFields[name] = value;\n    }\n\n    // Handling poll vote\n    if (name.includes('poll-answer')) {\n      newFields['selectedAnswer'] = value;\n    }\n\n    setfields(newFields);\n\n    handleValidation(newFields);\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    if (!isCodeValid) {\n      alert('Form is not valid');\n      return;\n    }\n\n    // Axios config\n    const config = {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    };\n\n    try {\n      const res = await StreamPollsAPI.get(\n        `/users/${fields.code}/polls`,\n        config\n      );\n\n      setpolls(res.data.data.polls);\n\n      setisButtonClicked(true);\n    } catch (err) {\n      errorController(err.response);\n    }\n  }\n\n  async function onVote(event) {\n    event.preventDefault();\n\n    if (!isVoteSelected) {\n      return alert('Please select an answer');\n    }\n\n    const pollID = event.target.closest('.poll').id;\n\n    // Axios config\n    const config = {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    };\n\n    const data = { selectedAnswer: fields.selectedAnswer };\n\n    try {\n      await StreamPollsAPI.patch(\n        `/users/${fields.code}/polls/${pollID}`,\n        data,\n        config\n      );\n\n      alert('Sucessfully voted');\n\n      window.location.reload();\n    } catch (err) {\n      errorController(err.response);\n    }\n  }\n\n  return (\n    <UserPollsView\n      onInputChange={onInputChange}\n      onSubmit={onSubmit}\n      errors={errors}\n      code={fields.code}\n      isButtonClicked={isButtonClicked}\n      polls={polls}\n      onVote={onVote}\n      user={user}\n    />\n  );\n}\n\nexport default UserPolls;\n","// Third Party imports\nimport React from 'react';\n\n// Project imports\nimport CreatorPolls from '../creatorPolls/CreatorPolls';\nimport UserPolls from '../userPolls/UserPolls';\n\nfunction Polls(props) {\n  /**\n   * To be implemented\n   * Render according to user\n   * For testing using custom props\n   */\n  function renderHelper() {\n    if (!props.user) {\n      return <div>Loading...</div>;\n    } else if (props.user.role === 'creator') {\n      return <CreatorPolls {...props} />;\n    } else if (props.user.role === 'user') {\n      return <UserPolls {...props} />;\n    } else {\n      return <div>Loading...</div>;\n    }\n  }\n\n  return renderHelper();\n}\n\nexport default Polls;\n","// Third Party Imports\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n// Project Imports\nimport Poll from './Poll';\nimport './myPollsView.css';\n\nfunction MyPollsView({ polls, handleRefresh, handleDelete }) {\n  function renderPolls() {\n    if (polls.length === 0) {\n      return <h1>No polls to show</h1>;\n    } else if (polls.length > 0) {\n      return polls.map((poll) => (\n        <Poll key={poll._id} poll={poll} handleDelete={handleDelete} />\n      ));\n    } else {\n      return <h1>Loading...</h1>;\n    }\n  }\n\n  return (\n    <div className=\"my-polls-page\">\n      <div className=\"my-polls-container\">\n        <div className=\"my-polls-btns\">\n          <Link to=\"/polls\">\n            <button className=\"btn poll-btn my-poll-btn\">Create Poll</button>\n          </Link>\n\n          <div className=\"ref-button-wrapper\">\n            <button onClick={handleRefresh} className=\"btn refresh-btn\">\n              Refresh Results\n            </button>\n          </div>\n        </div>\n        {renderPolls()}\n      </div>\n    </div>\n  );\n}\n\nexport default MyPollsView;\n","// Third Party Imports\nimport React, { useState, useEffect } from 'react';\n\n// Project Imports\nimport MyPollsView from './MyPollsView';\nimport StreamPollsAPI from '../../api/StreamPollsAPI';\nimport { Redirect } from 'react-router-dom';\nimport errorController from '../error/errorController';\n\nfunction MyPolls(props) {\n  const initialPolls = [];\n  const [polls, setpolls] = useState(initialPolls);\n\n  useEffect(() => {\n    async function fetchPolls() {\n      // Axios config\n      const config = {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      };\n\n      try {\n        // Fetch polls\n        const res = await StreamPollsAPI.get('/users/mypolls', config);\n\n        // Update polls\n        setpolls(res.data.data.polls);\n      } catch (err) {\n        if (err.response) {\n          errorController(err.response);\n        }\n      }\n    }\n\n    fetchPolls();\n  }, []);\n\n  function handleRefresh() {\n    window.location.reload();\n  }\n\n  async function handleDelete(event) {\n    if (!window.confirm('Are you sure want to delete this poll')) {\n      return;\n    }\n\n    const pollID = event.target.closest('.poll').id;\n\n    // Axios config\n    const config = {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    };\n\n    try {\n      await StreamPollsAPI.delete(`/users/polls/${pollID}`, config);\n\n      alert('Poll successfully deleted');\n      window.location.reload();\n    } catch (err) {\n      if (err.response) {\n        errorController(err.response);\n      }\n    }\n  }\n\n  function renderHelper() {\n    if (!props.user) {\n      return <div>Loading...</div>;\n    } else if (props.user.role === 'creator') {\n      return (\n        <MyPollsView\n          handleDelete={handleDelete}\n          handleRefresh={handleRefresh}\n          polls={polls}\n        />\n      );\n    } else if (props.user.role === 'user') {\n      return <Redirect to={{ pathname: '/page404' }} />;\n    } else {\n      return <div>Loading...</div>;\n    }\n  }\n\n  return renderHelper();\n}\n\nexport default MyPolls;\n","import { useState, useEffect } from 'react';\n\nimport StreamPollsAPI from '../../api/StreamPollsAPI';\n\nexport const useAuth = () => {\n  const [isSignedIn, setisSignedin] = useState(null);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    async function checkAuth() {\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        setisSignedin(false);\n        return;\n      }\n\n      // Axios config\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      };\n\n      try {\n        const res = await StreamPollsAPI.get('/users/isSignedIn', config);\n\n        setisSignedin(true);\n        setUser(res.data.data.user);\n      } catch (err) {\n        setisSignedin(false);\n      }\n    }\n\n    checkAuth();\n  }, []);\n\n  return [user, isSignedIn];\n};\n\nexport default useAuth;\n","import React from 'react';\n\nimport useAuth from '../auth/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function ProtectedRoutes({ component: Component, ...props }) {\n  const [user, isSignedIn] = useAuth(props.user, props.isSignedIn);\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (isSignedIn === true) {\n          return <Component {...props} isSignedIn={isSignedIn} user={user} />;\n        } else if (isSignedIn === false) {\n          return <Redirect to={{ pathname: '/login' }} />;\n        } else {\n          return <div>Loading...</div>;\n        }\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport useAuth from '../auth/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function CustomRoutes({ component: Component, ...props }) {\n  const [user, isSignedIn] = useAuth(props.user, props.isSignedIn);\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (isSignedIn === true) {\n          return <Redirect to={{ pathname: '/polls' }} />;\n        } else if (isSignedIn === false) {\n          return <Component {...props} />;\n        } else {\n          return <div>Loading...</div>;\n        }\n      }}\n    />\n  );\n}\n","// Third Party Imports\nimport React from 'react';\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom';\n\n// Project Imports\nimport Home from '../home/Home';\nimport Login from '../login/Login';\nimport Page404 from '../error/Page404';\nimport SignUp from '../signup/SignUp';\nimport Polls from '../polls/Polls';\nimport MyPolls from '../mypolls/MyPolls';\nimport ProtectedRoutes from './ProtectedRoutes';\nimport CustomRoutes from './CustomRoutes';\n\nfunction Routes(props) {\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <CustomRoutes path=\"/\" exact component={Home} />\n          <CustomRoutes path=\"/login\" exact component={Login} />\n          <CustomRoutes path=\"/signup/:id\" exact component={SignUp} />\n\n          <ProtectedRoutes path=\"/polls\" exact component={Polls} />\n          <ProtectedRoutes path=\"/mypolls\" exact component={MyPolls} />\n\n          <Route path=\"/Page404\" exact component={Page404} />\n          <Redirect to=\"/Page404\" />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\nexport default Routes;\n","// Third Party Imports\nimport React from 'react';\n\n// Project Imports\nimport Routes from '../routes/Routes';\n\n// Styles\nimport './app.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// Third Party Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Project Imports\nimport App from './components/app/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}